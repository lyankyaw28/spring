Spring Framework
	light weight framework တစ္ခုၿဖစ္တယ္။framework of frameworks လို႔လဲ ေခၚႏိုင္တယ္ ဘာလို႔လဲဆိုေတာ့  Struts, Hibernate, Tapestry, EJB, JSF ဆိုတဲ့
	framework မ်ားကိုလည္း support လုပ္ထားလို႔ၿဖစ္တယ္
	spring framework ကို module ေတာ္ေတာ္မ်ားမ်ားနဲ႔ ေပါင္းစည္းထားတယ္ IOC, AOP, DAO, Context, ORM, WEB MVC etc.
************************************************************************************************************************
Inversion Of Control (IOC) and Dependency Injection
	ဘာလို႔သံုးတာလဲဆိုရင္ code ထဲကေန dependency ကို ဖယ္ရွားခ်င္တဲ့အတြက္ ၿဖစ္တယ္
	အဲ့လိုလုပ္လိုက္ၿခင္းအားၿဖင့္ code ကို test လုပ္ရတာနဲ႔ ထိန္းသိမ္းရတာ လြယ္သြားတယ္
	
	tight coupling code
	class Employee{  
		Address address;  
		Employee(){  
			address=new Address();  
		}  
	}
	
	ioc code
	class Employee{  
		Address address;  
		Employee(Address address){  
			this.address=address;  
		}  
	}
	ဒီလိုေၿပာင္းလိုက္ၿခင္းအားၿဖင့္ setup ေတြကို ၿပင္စရာမလိုေတာ့ဘဲနဲ႔ logic ေတြကိုၿပင္ဖို႔လိုေတာ့တယ္
	spring framework မွာ ioc container က dependency ေတြကို inject လုပ္ဖို႔ တာ၀န္ယူတယ္ xml ဖိုင္ၿဖင့္လည္းေကာင္း annotation ၿဖင့္လည္းေကာင္းလုပ္ေဆာင္ႏိုင္တယ္
	
	DI ရဲ႕ေကာင္းက်ိဳး
	 couple ၿဖစ္တာကို ေလ်ာ့ခ်ေပးတဲ့အတြက္ ထိန္းသိမ္းရတာ လြယ္ကူတယ္
	 test လုပ္ရတာ လြယ္လာတယ္
	 
	 advantage of spring framework
	  1. Predefined Templates	 
	  		spring framework က JDBC, Hibernate, JPA အစရွိတဲ့ technologies ေတြရဲ႕ template ေတြကို ထုတ္ေပးတယ္
	  		ဆိုလိုတာက အဲ့ technologies ေတြရဲ႕ basic steps ေတြကို hide လုပ္ေပးလိုက္တဲ့အတြက္ code ေတြအမ်ားၾကီးေရးစရာမလိုေတာ့ဘူး
	  		jdbc template ကိုပဲၾကည့္လိုက္မယ္ဆိုရင္ jdbc ေရးရင္လုပ္ေဆာင္ရမယ့္ exception handling, creating connection, creating statement, 
	  		committing transaction, closing connection စတဲ့အခ်က္ေတြကို လုပ္ေဆာင္စရာမလိုေတာ့ဘူး query ေရးေပးလိုက္ရံုပဲ
	  		
	  	2. Loose Coupling
	  		DI ေၾကာင့္
	  		
	  	3. Easy to test
	  		DI က test လုပ္ရတာ လြယ္ကူေအာင္ ၿပဳလုပ္ေပးတယ္ EJB or Struts application တို႔မွာဆိုရင္ test လုပ္ဖို႔အတြက္ server လိုတယ္
	  		ဒါေပမယ့္ spring framework မွာေတာ့ server မလိုဘူး
	  		
	  	4. Light Weight
	  		သူ႕ရဲ႕ pojo implementation ေၾကာင့္ light weight ၿဖစ္တယ္
	  		spring framework က ဘယ္ class ကို inherit လုပ္ရမယ္ ဘယ္ interface ကို implements လုပ္ရမယ္လို႔ force ေပးတာမရွိဘူး
	  		အဲ့တာေၾကာင့္ non-invasive လို႔ဆိုႏိုင္တယ္
	  		
	  	5. Fast Development
	  		spring framework ရဲ႕ DI က framework ေတာ္ေတာ္မ်ားမ်ားကို support ေပးထားလို႔ J2EE application မ်ားကို develop လုပ္ရတာၿမန္ဆန္ေစတယ္
	  		
	  	6. Power Abstration
	  		 JavaEE specifications such as JMS, JDBC, JPA and JTA စသည္မ်ားကို powerful abstraction လုပ္ေပးထားတယ္
	  		 
	  	7. Declarative support
	  		 caching, validation, transactions and formatting မ်ားကို declarative support လုပ္ေပးထားတယ္
************************************************************************************************************************	  		
Spring Modules
	spring framework ကို module အမ်ားၾကီးနဲ႔ ဖြဲ႕စည္းထားတယ္
	core, beans, context, expression language, AOP, Aspects, Instrumentation, JDBC, ORM, OXM, JMS, Transaction, Web, Servlet, Struts etc. 
	These modules are grouped into Test, Core Container, AOP, Aspects, Instrumentation, Data Access / Integration, Web (MVC / Remoting)	
	
	တစ္ခုခ်င္းရွင္းမယ္ container မ်ားကို အရင္ရွင္းမယ္
	1. Testing
		ဒီ layer က JUnit နဲ႔ TestNG test လုပ္ၿခင္းကို support ေပးတယ္
		
	2.Spring Core Container
		spring core container မွာ 1.core, 2.beans, 3.context and 4.expression language (EL) modules ပါ၀င္ပါတယ္
	
		2.1.Core and Beans
			ဒီ module ကေန IOC နဲ႔ DI features မ်ားကို ေပးပါတယ္
		
		2.2.Context
			context module က internationalization (I18N), EJB, JMS, Basic Remoting မ်ားကို support လုပ္ပါတယ္
		
		2.3.Expression Language
			Expression Language module က to setting and getting property values, method invocation, accessing collections and indexers,
			 named variables, logical and arithmetic operators, retrieval of objects by name မ်ားကို support ေပးပါတယ္
			 
	3.AOP, Aspects and Instrumentation
		Advices, Pointcuts အစရွိသည္မ်ားကို အသံုးၿပဳတဲ့အခါ aspect oriented programming implementation ကို support လုပ္ေပးတယ္
		decouple ၿပဳလုပ္ရန္ ၿဖစ္တယ္
		
	4.Data Access / Integration
		JDBC, ORM, OXM, JMS and Transaction modules မ်ားရဲ႕ အစုအဖြဲ႕ၿဖစ္တယ္ 
		database နဲ႔ဆက္ႏြယ္တဲ့အပိုင္းၿဖစ္တယ္
		
	5.Web
		Web, Web-Servlet, Web-Struts and Web-Portlet ရဲ႕အစုအဖြဲ႕ၿဖစ္တယ္ web application တစ္ခုၿဖစ္ဖို႔အတြက္ လိုအပ္တဲ့အပိုင္းလည္းၿဖစ္တယ္
************************************************************************************************************************	
Spring Application တစ္ခုဖန္တီးၿခင္း(simple)
	1.create the class
	2.create the xml file to provide the values
	3.create the test class
	4.Load the spring jar files
	5.Run the test class
	
	2.applicationContext.xml ထဲမွာ java class ထဲကို IOC container က data မ်ားကို property tag ကတစ္ဆင့္ထည့္ေပးလို႔ရတယ္
		<bean id="studentbean" class="com.javatpoint.Student">  
		<property name="name" value="Vimal Jaiswal"></property> 
		
	3.test class မွာဆိုရင္ေတာ့ getBean method ကိုသံုးၿပီးေတာ့ IOC container မွ enity class object ကို ရတယ္
		Student student=(Student)factory.getBean("studentbean"); 
		
		Resource ဆိုတာက  applicationContext.xml file ကို ကိုယ္စားၿပဳတယ္
		Resource ဆိုတာက ClassPathResource ရဲ႕ interface တစ္ခုၿဖစ္တယ္
		Resource resource=new ClassPathResource("applicationContext.xml");  
		
		BeanFactory ရဲ႕ implementation class က XmlBeanFactory ၿဖစ္တယ္
		BeanFactory interface ထဲမွာ method ေပါင္းမ်ားစြာ ရွိတယ္	အဲ့ထဲကမွ getBean ဆိုတဲ့ method က သက္ဆိုင္ရာ class ကို return ၿပန္ေပးတဲ့အလုပ္ကိုလုပ္တယ္
 	
	4.Load the jar files required for spring framework
		အဓိက jar file ၃ file ကို spring application run ဖို႔အတြက္ လိုအပ္တယ္
			org.springframework.core-3.0.1.RELEASE-A
			com.springsource.org.apache.commons.logging-1.1.1
			org.springframework.beans-3.0.1.RELEASE-A
		